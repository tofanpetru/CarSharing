@using Application
@model Domain.Entities.BookDetailsDTO
@{
    ViewData["Title"] = "Details";
    string currentUserName = ViewBag.currentUserName;
    bool HasAssignmentsLeft = ViewBag.hasAssignmentsLeft;
    var Genres = ViewBag.genres;
    var modelGenresArray = ViewBag.modelGenresArray;
    var Languages = ViewBag.languages;
    var Authors = ViewBag.authors;
    IEnumerable<string> bookStars = Enumerable.Repeat("★", AppSettings.Instance.BookRatingStars);
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>

<style>
    .checked {
        color: orange;
    }

    .button {
        background-color: black;
        border: none;
        color: white;
        padding: 10px 10px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 15px;
    }

    .button-back {
        background-color: blue;
        border: none;
        color: white;
        padding: 10px 10px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 15px;
    }

    a {
        color: white
    }

    .book-cover {
        box-shadow: 5px 5px 5px #ccc;
        -moz-box-shadow: 5px 5px 5px #ccc;
        -webkit-box-shadow: 5px 5px 5px #ccc;
    }

    a:hover {
        color: white;
        text-decoration: none
    }

    .tooltip-inner {
        background-color: #eb552d;
        max-width: none;
        border-radius: 3%;
        box-shadow: rgba(0, 0, 0, 0.3) 0 2px 10px;
    }
</style>

<div class="container">

    <div class="row">
        <div>
            <button class="button" style="float:right">
                <span onclick="GoBack()"><i class="fas fa-arrow-left"></i> Back To List</span>
            </button>
        </div>
        <br />
        <br />
        <div class="col-5">
            <div class="text-center">
                <img class="book-cover" src="@Model.ImagePath" alt="@Model.Title"
                     onerror="this.src='@AppSettings.Instance.DefaultImage';" width="150" style="margin-bottom: 1rem" />
                <br />
                @if (ViewBag.bookTotalRating == ViewBag.bookTotalRating)
                {
                    var stars = ViewBag.bookTotalRating / 20;
                    <div class="star-ratings mx-auto" data-toggle="tooltip" data-placement="bottom" title="@String.Format("{0:0.0}", stars) out of @AppSettings.Instance.BookRatingStars stars">

                        <div class="fill-ratings" style="width: @ViewBag.bookTotalRating%;">
                            <span>
                                @foreach (var star in bookStars)
                                {
                                    @star
                                }
                            </span>
                        </div>
                        <div class="empty-ratings">
                            <span>
                                @foreach (var star in bookStars)
                                {
                                    @star
                                }
                            </span>
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="col-6">
            <h4 style="word-break:break-all">@Model.Title</h4>
            <br />
            <div class="row">
                <div class="col-md-5">
                    <label class="text-dark fw-bolder"><strong>Author</strong></label>
                    <p style="word-break:break-all">@Model.Author</p>

                    <label class="text-dark fw-bolder"><strong>Genres</strong></label>
                    <p>
                        @foreach (var g in Model.Genres)
                        {
                            <span class="badge bg-dark">@g.Name</span>
                        }
                    </p>

                    <label class="text-dark fw-bolder"><strong>Availability</strong></label>
                    <p>
                        @{
                            if (!Model.IsPending)
                            {

                                if (Model.IsAvailable)
                                {
                                    <span class="badge bg-success">Available</span>
                                }
                                else
                                {
                                    <span class="badge bg-danger">Busy</span>
                                }
                            }
                            else
                            {
                                <span class="badge bg-warning">Pending</span>

                            }
                        }

                    </p>
                </div>

                <div class="col-md-7">
                    <label class="text-dark fw-bolder"><strong>Uploaded by</strong></label>
                    <p style="word-break:break-all">@Model.Owner</p>

                    <label class="text-dark fw-bolder"><strong>Publication date</strong></label>
                    <p>@Model.PublishDate.ToShortDateString()</p>

                    <label class="text-dark fw-bolder"><strong>Language</strong></label>
                    <p>@Model.Language</p>

                    <div>
                        @if (Model.Owner == currentUserName)
                        {
                            <button id="editBookButton" data-toggle="modal" data-target="#editBookModal" class="button" type="button">Edit this book</button>
                            @*                            <a id="UploadBook" href="" class="list-group-item list-group-item-action" data-toggle="modal" data-target="#exampleModal2" onclick="ClearMessageBox()"><b>Upload Book</b></a>
                            *@ <button id="deleteBookButton" type="button" data-toggle="modal" data-target="#deleteBookModal" class="button">Delete</button>
                        }
                        else
                        {
                            @if (Model.IsAvailable)
                            {

                                @if (HasAssignmentsLeft)
                                {
                                    <button id="assignBookBtn" bookid="@Model.Id" type="button" class="btn btn-dark p-2">Assign to me</button>
                                }
                                else
                                {
                                    <button style="cursor:default" data-toggle="tooltip" data-placement="bottom" title="You can't have more than @AppSettings.Instance.MaxAllowedAssignments active assignments" bookid="@Model.Id" type="button" class="btn btn-disabled p-2">Assign to me</button>
                                }

                                <button data-toggle="tooltip" style="cursor:default" title="Available book can't be added to queue" data-placement="bottom" class="btn btn-disabled p-2">Add To Queue</button>

                            }
                            else
                            {
                                <button style="cursor:default" data-toggle="tooltip" data-placement="bottom" title="This book is not available at the moment." bookid="@Model.Id" type="button" class="btn btn-disabled p-2">Assign to me</button>
                                <button data-html="true" data-toggle="tooltip" data-placement="bottom" class="btn p-2 @((!ViewBag.hasQueueAssignmentsLeft || ViewBag.isBookAssignedToCurrentUser || ViewBag.hasPendingExtend) ? "btn-disabled d-cursor" : "btn-dark")" id="addToQueueBtn" bookId="@Model.Id"
                                        title="@(!ViewBag.hasQueueAssignmentsLeft
                                         ?
                                         "It is not possible to have more than " + AppSettings.Instance.MaxAllowedBooksInUsersQueue + " PENDING Assignment " + "\n" +
                                         "at the same time.<br> " +
                                         "You'll be able to add a new PENDING  Assignment starting:<br>" +
                                         ViewBag.queueEndDate
                                         : ViewBag.hasPendingExtend ? "This book has a pending extend request" :
                                         "")">
                                    Add To Queue
                                </button>
                            }
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="deleteBookModal" tabindex="-1" class="modal fade" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Confirm Delete</h4>
                <button class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this book?</p>
            </div>
            <div class="modal-footer">
                <button data-dismiss="modal" type="button" class="btn">Cancel</button>
                @using (Html.BeginForm("DeleteBook", "Book", FormMethod.Post, new { id = "deleteForm", @class = "" }))
                {
                    @Html.AntiForgeryToken()
                    <input type="submit" value="Delete" id="submitButton" class="btn btn-danger" />
                    <input type="hidden" name="id" value="@Model.Id" />
                }
            </div>
        </div>
    </div>
</div>

<div id="assignBookModal" tabindex="-1" class="modal fade" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div id="assignBookModalHeader" class="modal-header">
                <h4 class="modal-title">Book Assignment</h4>
                <button class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body text-center">
                <p id="assignBookModalContent"></p>
            </div>
        </div>
    </div>
</div>
<div aria-hidden="true" aria-labelledby="exampleModalLabel" class="addbook modal fade" id="editBookModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5><b>Edit This Book</b></h5>
            </div>
            <div class="modal-body" id="general-content">
                <div>
                    @*Title*@
                    <div class="form-group row-padding">
                        <input id="title" autocomplete="off" class="form-control add" oninput="validateTitle(this.value);" style="height:40px" required type="text" value="@Model.Title" />
                        <div class="error-messages" id="err-title"></div>
                    </div>
                    @*Genres and Languages*@
                    <div class="row row-padding">
                        <div class="col-md-6">
                            <div class="dropdown">
                                <select name="selectGenres" id="selectGenre" class="selectpicker form-control" multiple data-live-search="true" title="Select the genres *" onchange="ValidateGenre(this.value)">
                                    @{
                                        foreach (var genre in Genres)
                                        {
                                            <option>@genre.Name</option>
                                        }
                                    }
                                </select>
                            </div>
                            <div class="error-messages" id="err-genre"></div>
                        </div>
                        <div class="col-md-6">
                            <div class="dropdown">
                                <select name="selectLanguage" class="selectpicker form-control" id="selectLanguage" data-live-search="false" title="Select the Language *" onchange="validateLanguage(this.value)">
                                    @{
                                        foreach (var language in Languages)
                                        {
                                            <option>@language.Name</option>
                                        }


}
                                </select>
                            </div>
                            <div class="error-messages" id="err-language"></div>
                        </div>
                    </div>
                    @*Authors*@
                    <br />
                    <div class="row row-padding">
                        <div class="col-md-7">
                            <div id="selectAuthordiv">
                                <select class="selectpicker form-control" id="selectAuthor" data-live-search="true" title="Select the author *" style="display: none;" onchange="ValidateExistingAuthor(this.value)">
                                    @{
                                        foreach (var author in Authors)
                                        {
                                            <option>@author.FullName</option>
                                        }
                                    }
                                </select>
                                <div class="error-messages" id="err-existingAuthor"></div>
                            </div>
                        </div>
                    </div>
                    @*Publication Date*@
                    <br />
                    <div class="row row-padding">
                        <div class="col-md-4">
                            <label style="font-size:90%">Publish Date *</label>
                        </div>
                        <div class="col-md-8">
                            <div class="calendar-assign">
                                <div class="input-data-calendar">
                                    <input value="@Model.PublishDate.ToString("yyyy-MM-dd")" @*placeholder="@Model.PublishDate.ToShortDateString()" onfocus="(this.type='date')"*@ id="setDate" type="date" style="border:solid; border-width: thin; padding-left: 5px;" onchange="ValidateDate(this.value)" />
                                </div>
                            </div>
                            <div class="error-messages" id="err-publish"></div>
                        </div>
                    </div>
                    <br />
                    @*Browse book cover*@
                    <div class="row row-padding">
                        <br />
                        <div class="col-md-5 my-auto">
                            <label style="font-size:90%">Book cover (Optional)</label>
                        </div>
                        <div class="col-md-7 my-auto">
                            <input class="form-control" style="font-size: 0.8rem; padding-top: 0.6rem; padding-bottom: 0.6rem" id="imageFile" type="file" accept=".jpg, .png, .jpeg" name="image" onchange="ValidateBookCover(this)">
                            <div class="error-messages" id="err-cover"></div>
                        </div>
                        <br /><br />
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button id="closeUploadModal" type="button" class="btn btn-outline-secondary container" style="border-color:#919AA1" data-dismiss="modal">Close</button>
                <button type="button" id="editBook" class="btn container btn-dark" style="width:45%" onclick="EditBook(@Model.Id)">Update Book</button>
            </div>
            <div class="modal-footer messageBoxFooter">
                <div id="MessageBoxArea"></div>
            </div>
        </div>
    </div>
</div>
<br />
<br />
<br />
<br />
@if (!Model.IsPending)
{
    @if (!ViewBag.hasReviews)
    {
        <div class="row">
            <div class="col-md-1">
            </div>
            <div class="col-md-5">
                <br />
                <p style="color:black; font-size:25px;" class="fw-bolder">Reviews</p>
                <div id="reviewsDiv" class="col-md-5 scrollbar dark-scrollbar" style="overflow-y: auto; max-height:500px; position:relative; width:100%">
                    @if (ViewBag.bookTotalRating == ViewBag.bookTotalRating)
                    {
                        <table id="Reviews" style="margin-right:5%">
                            <thead></thead>
                            <tbody id="reviewsTable" style="padding-right:50%"></tbody>
                        </table>
                    }
                    else
                    {
                        <span>No reviews yet.</span>
                    }

                </div>
            </div>
            <div id="AddReviewDiv" class="col-md-5">
                <br />
                <p style="padding-left:5px"><b>Add a Review</b></p>
                <div class="rate">
                    @for (int i = AppSettings.Instance.BookRatingStars; i > 0; i--)
                    {
                        <input type="radio" id="star_@i" name="rate" value="@i" onclick="this.form.submit();" />
                        <label for="star_@i" title="@i stars">@i stars</label>
                    }
                </div>
                <div class="error-messages" id="err-reviewStar"></div>
                <br /><br /><br />
                <div>
                    <label>Title</label>
                </div>
                <input id="reviewTitle" class="form-control" oninput="ValidateReviewTitle(this.value)" />
                <div class="error-messages" id="err-reviewTitle"></div>
                <br />
                <label>Review</label>
                <textarea id="reviewContent" class="form-control" oninput="ValidateReviewContent(this.value)" rows="5" placeholder="(Optional)"></textarea>
                <div class="error-messages" id="err-reviewContent"></div>
                <br />
                <button id="sumbitReview" class="btn btn-dark" onclick="AddReview(@Model.Id)">Submit</button>
                <div class="error-messages" id="err-addReview"></div>
            </div>
            <div class="col-md-1"></div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-md-1">
            </div>
            <div class="col-md-9">

                <br />
                <p style="color:black; font-size:25px;" class="fw-bolder">Reviews</p>
                <div id="reviewsDiv" class="col-md-5 scrollbar dark-scrollbar" style="overflow-y: auto; max-height:500px; position:relative; width:100%">
                    @if (ViewBag.bookTotalRating == ViewBag.bookTotalRating)
                    {
                        <table id="Reviews" style="margin-right:5%">
                            <thead></thead>
                            <tbody id="reviewsTable" style="padding-right:50%">
                                <tr>
                                    <td>
                                        <div class="container-fluid">
                                            <div class="row" id="about">
                                                <div id="image" class="col-sm">
                                                    <img class="book-cover" src="@ViewBag.UserReview.ReviewerAvatarPath" alt="@ViewBag.UserReview.ReviewerUserName" onerror="this.src = '@AppSettings.Instance.DefaultUserProfileImage'" width="150" style="margin-bottom: 1rem; border-radius:50%" />
                                                    <span style="padding-left: 25px; color:black" class="fw-bolder"><b>@ViewBag.UserReview.ReviewerUserName</b></span>
                                                </div>
                                            </div>
                                        </div>
                                        <p class="fw-bolder" style="padding-left:25px; color:black; word-wrap:break-word; word-break: break-word; margin-bottom:0px">@ViewBag.UserReview.Title</p>
                                        <div style="padding-left:25px; cursor:default">
                                            @for (int i = 0; i < ViewBag.UserReview.Rating; i++)
                                            {
                                                <span class="fa fa-star checked"></span>
                                            }
                                        </div>
                                        <span style="padding-left:25px; word-wrap:break-word">@ViewBag.UserReview.PublishDate.ToString("MMMM") @ViewBag.UserReview.PublishDate.Day, @ViewBag.UserReview.PublishDate.Year</span>
                                        <p style="word-wrap:break-word; word-break: break-word; padding-left:25px; padding-top:10px">@ViewBag.UserReview.Content</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <span>No reviews yet.</span>
                    }
                </div>
            </div>
            <div class="col-md-2"></div>
        </div>
    }
}


@section Scripts{
    <script src="@Url.Content("~/js/UploadBook.js")"></script>
    <script>
        $(document).ready(function ()
        {
            var isPend = @(Model.IsPending?"true":"false") ;
@*            var isPend = @Model.IsPending;
*@            if (isPend== true) {
                $('#selectAuthor').attr('disabled', true);
            }
           });</script>
    <script>
        $('#editBookButton').click(function () {
            var a = [];
            @foreach(var g in Model.Genres)
                {
                    <text>
            a.push('@g.Name');
                    </text>
                }
            $('#selectLanguage').selectpicker('val', '@Model.Language');
            $('#selectGenre').selectpicker('val', a);
            $('#selectAuthor').selectpicker('val', '@Model.Author');
            SetToTrue();
       });

    </script>
    <script>
        function GoBack() {
            window.location.replace(GetReferrer());
        }
        function GetReferrer() {
            if (document.referrer.toLowerCase().includes("account/userprofile")) {
                var referrer = document.referrer;
                if (!document.referrer.toLowerCase().includes("section")) {
                    referrer += "?section=myBooksSection"
                }
                return referrer;
            }
            else
                return "/";
        }
        var deleteButton = document.getElementById("deleteBookButton")
        if (deleteButton != null)
            deleteButton.setAttribute("data-path", "/Book/DeleteBook/?referrer=" + GetReferrer());
    </script>
    <script src="~/js/BookDetails.js"></script>
    <script>
        var infinityScroll = new BookReviewPagedScroll("reviewsTable", "/Book/BookReviews", { bookId:@Model.Id });
    </script>
    <script type="text/javascript" charset="utf8" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.12.4/js/bootstrap-select.min.js"></script>

}