@using Domain.Entities;
@using Application;
@model ICollection<GetReviewDto>
@{
    var reviews = Model;
}
@{ 
    if(reviews != null)
    {
        @foreach (var review in reviews)
        {
            <tr>
                <td>
                    <div class="container-fluid">
                        <div class="row" id="about">
                            <div id="image" class="col-sm">
                                <img class="book-cover" src="@review.ReviewerAvatarPath" alt="@review.ReviewerUserName" onerror="this.src = '@AppSettings.Instance.DefaultUserProfileImage'" width="150" style="margin-bottom: 1rem; border-radius:50%" />
                                <span style="padding-left: 25px; color:black" class="fw-bolder"><b>@review.ReviewerUserName</b></span>
                            </div>
                        </div>
                    </div>
                    <p class="fw-bolder" style="padding-left:25px; color:black; word-wrap:break-word; word-break: break-word; margin-bottom:0px">@review.Title</p>
                    <div style="padding-left:25px; cursor:default">
                        @for (int i = 0; i < review.Rating; i++)
                        {
                            <span class="fa fa-star checked"></span>
                        }
                    </div>
                    <span style="padding-left:25px; word-wrap:break-word">@review.PublishDate.ToString("MMMM") @review.PublishDate.Day, @review.PublishDate.Year</span>
                    <p style="word-wrap:break-word; word-break: break-word; padding-left:25px; padding-top:10px">@review.Content</p>
                </td>
            </tr>
         }
    }
}
