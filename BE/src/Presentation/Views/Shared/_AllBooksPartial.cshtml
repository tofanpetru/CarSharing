@using Application
@model IPagedList<Domain.Entities.AllBooksDto>
@{
    string urlAction = ViewBag.PaginationAction;
    string section = ViewBag.PaginationSection;
}

<div>
    <div class="wrapper">
        @foreach (var item in Model)
        {
            <div class="book-item">
                <a href="/Book/Details/@item.Id">
                    <img href="/Book/Details/@item.Id" src="@item.ImagePath" alt="@item.Title" onerror="this.src='@AppSettings.Instance.DefaultImage';" />

                    <br />
                    <span class="book-title">@item.Title</span>

                    @if (item.IsPending)
                    {
                        <br />
                        <span class="badge" style="background-color: #F0AD4E;">DRAFT</span>
                    }
                </a>
            </div>
        }
    </div>
</div>
<br />

<div>
    @Html.PagedListPager(Model, page =>
    Url.Action(urlAction,
        section == null ? 
        new
        {
            section = section,
            page = page,
            ViewBag.BookSearch.ByAuthor,
            ViewBag.BookSearch.ByGenre,
            ViewBag.BookSearch.ByLanguage,
            ViewBag.checkBoxFilter.CheckBoxAuthors,
            ViewBag.checkBoxFilter.CheckBoxGenres,
            ViewBag.checkBoxFilter.CheckBoxLanguages,
            ViewBag.checkBoxFilter.BookStatuses
        }
        :
        new
        {
            section = section,
            page = page
        })
        ,
        new PagedListRenderOptions
        {
            LinkToPreviousPageFormat = "«",
            LinkToNextPageFormat = "»",
            ContainerDivClasses = new[] { "pagination-container" },
            UlElementClasses = new[] { "pagination justify-content-center" },
            DisplayEllipsesWhenNotShowingAllPageNumbers = false,
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" }
        })
</div>